"""
Django settings for digitized_av_qc project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from os import environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ngvj#^!4*^wjrtyslvq5gr0ku#0@qnyh$dw$rqb%$hv!-=aebw"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_cron",
    "package_review",
]

MIDDLEWARE = [
    "digitized_av_qc.middleware.HealthEndpointMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "digitized_av_qc.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [Path('package_review', 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.media",
            ],
        },
    },
]

WSGI_APPLICATION = "digitized_av_qc.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": environ.get('SQL_ENGINE'),
        "NAME": environ.get('SQL_DB_NAME'),
        "USER": environ.get('SQL_DB_USER'),
        "PASSWORD": environ.get('SQL_DB_PASSWORD'),
        "HOST": environ.get('SQL_HOST'),
        "PORT": environ.get('SQL_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CRON_CLASSES = [
    "package_review.cron.DiscoverPackages",
    "package_review.cron.FetchRightsStatements",
]

BASE_STORAGE_DIR = BASE_DIR / environ.get('STORAGE_PATH')
BASE_DESTINATION_DIR = BASE_DIR / environ.get('DESTINATION_PATH')

MEDIA_ROOT = BASE_STORAGE_DIR
MEDIA_URL = '/media/'

AQUILA = {
    'baseurl': environ.get('AQUILA_BASEURL')
}

AWS = {
    'access_key_id': environ.get('AWS_ACCESS_KEY_ID'),
    'secret_access_key': environ.get('AWS_SECRET_ACCESS_KEY'),
    'role_arn': environ.get('AWS_ROLE_ARN'),
    'region': environ.get('AWS_REGION'),
    'sns_topic': environ.get('AWS_SNS_TOPIC')
}
